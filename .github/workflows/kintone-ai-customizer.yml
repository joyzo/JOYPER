name: CI/CD

on:
  push:
    branches: [main, work]
  pull_request:
    branches: [main]

env:
  DEPLOY_ENVIRONMENT: staging

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/kintone-ai-customizer/plugin
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm lint
      - run: pnpm test
      - run: pnpm build
      - name: Upload artifact
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: plugin-dist
          path: services/kintone-ai-customizer/plugin/dist

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: services/kintone-ai-customizer/plugin
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/download-artifact@v4
        with:
          name: plugin-dist
          path: dist
      - run: pnpm install --no-frozen-lockfile
      - name: Deploy to Staging
        env:
          KINTONE_DOMAIN: ${{ secrets.KINTONE_DOMAIN }}
          KINTONE_USERNAME: ${{ secrets.KINTONE_USERNAME }}
          KINTONE_PASSWORD: ${{ secrets.KINTONE_PASSWORD }}
          PLUGIN_ID: ${{ secrets.PLUGIN_ID }}
          DEPLOY_ENVIRONMENT: staging
        run: |
          if [ -n "$KINTONE_DOMAIN" ]; then
            echo "üöÄ Deploying to staging environment: $KINTONE_DOMAIN"
            pnpm run deploy:staging
          else
            echo "‚ö†Ô∏è KINTONE_DOMAIN not set, skipping deployment"
          fi

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy:prod]')
    defaults:
      run:
        working-directory: services/kintone-ai-customizer/plugin
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/download-artifact@v4
        with:
          name: plugin-dist
          path: dist
      - run: pnpm install --no-frozen-lockfile
      - name: Deploy to Production
        env:
          KINTONE_DOMAIN: ${{ secrets.KINTONE_DOMAIN_PROD }}
          KINTONE_USERNAME: ${{ secrets.KINTONE_USERNAME_PROD }}
          KINTONE_PASSWORD: ${{ secrets.KINTONE_PASSWORD_PROD }}
          PLUGIN_ID: ${{ secrets.PLUGIN_ID_PROD }}
          DEPLOY_ENVIRONMENT: production
        run: |
          if [ -n "$KINTONE_DOMAIN" ]; then
            echo "üöÄ Deploying to production environment: $KINTONE_DOMAIN"
            pnpm run deploy:production
          else
            echo "‚ö†Ô∏è Production environment not configured, skipping deployment"
          fi
